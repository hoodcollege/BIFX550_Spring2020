knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
2 * 3  #[1] 6
# Uncomment the following line and run using the green arrow to the right
2 *
var1 <- 100 #overwrite
var1 <- 2
var1 <- 100 #overwrite
var1
ls() # to see what variables you have so far
list.files()  # to see the list of files
currdir <- getwd() # to see where you are
setwd(currdir) # not going anywhere
getwd()   # check
die <- 1:6  # 6 sided die
# let us do some math with die
# notice the vector math
die + 2
die/2
die * die
# recycling
die + 1:2
# function
sum(die)
# Help
# ?sum  # quick way to explore the function arguments
mean(die)
# stored constants
pi
# do sume calculations with the constants
# let us round it
round(pi, 2)
# let us find the arguments of funtion round
args(round)
args(plot)
args(sample)
# sampling function in R
# let us sample a die by rolling 3 times
# uncomment (remove the #) and run the following line
# sample(die, size = 7)
# What was the problem?
# Read the help page or args function on sample
# to figure out
#  ?sample
p <- c(rep(0.01,5), 0.95)
p
sample(x = die, size = 10, replace = TRUE, prob = p)
# no argument name
sample(die, 10, replace = TRUE)
sample(die, 10, TRUE) #  define them explicitely
sample(x = die, size = 6, replace = TRUE)
# multiple rolls
# First roll
die
sample(x = die, size = 2, replace = TRUE) # def prob
# one more roll
sample(x = die, size = 2, replace = TRUE) # def prob
unif_rand <- runif(10); unif_rand
args(round)
#### Note the digits = 0; it is set to zero and optional
round(unif_rand, digits = 2)
dist <- function(a, b) {
distsq <- sum( (b - a)^2 )
sqrt(distsq)
}
a <- c(1,2)
b <- c(3,3)
dist(a,b)
mysqrt <- function(b, a) {
distsq <- sum( (b - a)^2 )
sqrt(distsq)
}
mysqrt(4)
mysq <- function(b, a) {
distsq <- sum( (b - a)^2 )
sqrt(distsq)
}
mysq(2,4)
a <- c(1,1,2)
b <- c(2,2,2)
mysq(a,b)
#install.packages("randomForest")
#library(randomForest)
# update.packages(c("randomForest","tidyverse"))
# update R after update.packages
gl(2, 10, 20, labels = c("Ctl","Trt"))
library(rafalib)
mypar(1,1)
## Annette Dobson (1990) "An Introduction to Generalized Linear Models".
## Page 9: Plant Weight Data.
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))
weight <- c(ctl, trt)
lm.D9 <- lm(weight ~ group)
lm.D90 <- lm(weight ~ group - 1) # omitting intercept
lm.D9
plot(group,weight, col = "salmon")
